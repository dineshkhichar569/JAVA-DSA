package Java.Array;

import java.util.Arrays;

public class LC_2442_Count_Number_of_Distinct_Integers_After_Reverse_Operations {
    public static int countDistinctIntegers(int[] arr) {
        int e = arr.length;
        int[] newArr = new int[2*e];

        for (int i = 0; i < e; i++) {
            newArr[i] = arr[i];
            newArr[e + i] = reverse(arr[i]);
        }

        Arrays.sort(newArr);

        int count = 1;
        for (int i = 1; i < newArr.length; i++) {
            if(newArr[i] != newArr[i-1]){
                count++;
            }
        }
        return count;
    }

    public static int reverse(int n ){
        int result = 0;
        while(n != 0){
            int rem = n % 10;
            result = (result * 10) + rem;
            n = n/10;
        }
        return result;
    }

    public static void main(String[] args) {
        int[] arr = {1,13,10,12,31};
//        int[] arr = {2,2,2};
//        int[] arr = {867238,864556,838025,222310,677259,432756,378067,678666,95264,556333,436515,860800,553755,548806,911710,939741,816719,850963,783039,752284,708317,702550,249493,179931,107721,126389,453983,447949,930905,895139,360811,700682,218394,59339,683842,87998,683194,994151,95783,170304,663290,428262,943464,906474,78947,769146,587026,96438,783017,327181,405861,230846,417203,394276,759907,853896,152667,587980,792780,950224,9066,676328,172800,578760,111521,507312,262939,664397,577488,974165,745370,780715,108511,196779,210766,692233,516867,475698,826300,322848,60447,179782,708447,64331,750523,842363,324979,506527,603197,946370,3941,608026,312723,805489,187576,44976,103714,323114,200455,254041,364340,941983,148204,857761,751401,750692,805416,885564,858499,587980,514362,75978,644237,896595,874496,989849,18404,498192,116027,793773,771612,446962,912369,392047,336114,560792,741261,820463,412804,423807,925691,623251,460338,928850,937525,301225,105186,774803,554153,22571,430752,319672,245555,390601,685206,268859,210053,722565,31788,793153,228081,740087,698921,637607,392124,714552,612514,71213,464323,493910,353895,946161,926081,965940,950711,203835,999711,98759,525609,126897,635593,896263,360460,12525,265298,992089,430129,650957,443224,890450,976275,672930,398579,545316,712229,101849,448996,882690,401450,996885,81620,174436,482713,604263,549815,662993,867457,271908,98701,317636,915320,201321,728800,353052,45265,375365,616137,634708,298409,150056,690964,912973,294975,60618,13541,740307,480132,80776,74370,266215,27624,695056,688654,566439,978570,929151,941208,159943,800706,980833,541661,495731,512647,862706,276647,924294,294466,549317,952258,552261,145268,252484,619851,615504,361743,258245,495421,401324,747953,229936,365373,93741,866305,671309,43989,561715,478744,347912,89366,735225,65,423447,264661,395667,800705,603461,399609,710134,213785,210928,645408,393744,204177,509327,498593,703747,583583,428296,493651,859139,691498,130888,110916,381535,682557,206713,532450,279728,53703,573339,96704,87345,861339,404951,211572,748547,972146,954626,105893,958945,634969,848894,349778,781152,165863,218861,550569,735873,702150,3570,600575,839916,76629,597276,764131,20098,342360,320604,106156,439116,642778,911215,697803,289282,348945,389286,89215,510820,574102,372921,645840,496302,392898,885867,448855,836938,659721,785202,267108,81378,681824,408936,675866,986464,269344,64864,483448,312476,363286,728669,686182,457330,269326,960348,995580,509801,735332,396616,276191,634873,731427,106632,22745,442772,315999,790549,731018,783398,881912,789722,158925,738093,446948,82352,36107,132143,365204,450855,977877,407711,600643,306526,638461,652364,670976,436819,766799,978041,378413,158388,880374,191573,411945,42874,334450,638437};

        int ans = countDistinctIntegers(arr);
        System.out.println(ans);
    }
}
